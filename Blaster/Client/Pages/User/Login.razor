@page "/login"
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<h1 class="h2 font-weight-normal login-title">
    Login to Blaster
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginModel">
    <DataAnnotationsValidator />
    <h4 class="font-weight-normal text-center">Login</h4>

    <label for="inputEmail" class="sr-only">Email Address</label>
    <InputText id="inputEmail" class="form-control" @bind-Value="loginModel.Email" autofocus placeholder="Email Address" />
    <ValidationMessage For="@(() => loginModel.Email)" />

    <label for="inputPassword" class="sr-only">Password</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginModel.Password" />
    <ValidationMessage For="@(() => loginModel.Password)" />

    <div class="form-check m-3">
        <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginModel.RememberMe" />
        <label class="form-check-label" for="inputRememberMe">Remember Me</label>
    </div>

    <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

    <label class="text-danger">@error</label>

    <div class="m-3 text-center">
        <NavLink href="register">
            <a class="font-weight-normal text-center">Create account</a>
        </NavLink>
        |
        <NavLink href="forgot-password">
            <a class="font-weight-normal text-center">Forgot password</a>
        </NavLink>
    </div>
</EditForm>

@code{
    LoginModel loginModel { get; set; } = new LoginModel();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            var result = await authStateProvider.Login(loginModel);

            if (result.IsNotAllowed)
            {
                navigationManager.NavigateTo("/resend-confirmation-email");
            }
            else if (result.Succeeded)
            {
                navigationManager.NavigateTo("");
            }
            else
            {
                navigationManager.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}