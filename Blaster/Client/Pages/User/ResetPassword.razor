@page "/reset-password"
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@using Microsoft.AspNetCore.WebUtilities

<h1 class="h2 font-weight-normal login-title">
    Blaster
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="resetPasswordModel">
    <DataAnnotationsValidator />
    <h4 class="font-weight-normal text-center">Reset Password</h4>

    <label for="inputEmail" class="sr-only">Email Address</label>
    <InputText type="hidden" id="inputResetToken" class="form-control" @bind-Value="@resetPasswordModel.ResetToken" />
    <ValidationMessage For="@(() => resetPasswordModel.ResetToken)" />

    <label for="inputPassword" class="sr-only">Password</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="@resetPasswordModel.Password" />
    <ValidationMessage For="@(() => resetPasswordModel.Password)" />

    <label for="inputPasswordConfirm" class="sr-only">Password Confirmation</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control" placeholder="Password Confirmation" @bind-Value="@resetPasswordModel.PasswordConfirm" />
    <ValidationMessage For="@(() => resetPasswordModel.PasswordConfirm)" />

    <button class="btn btn-lg btn-primary btn-block" type="submit">Reset password</button>

    <label class="text-danger">@error</label>
    <NavLink href="login">
        <h6 class="font-weight-normal text-center">Already have an account? Click here to login</h6>
    </NavLink>
</EditForm>

@code{ ResetPasswordModel resetPasswordModel { get; set; } = new ResetPasswordModel();
    string error { get; set; }

    protected override void OnInitialized()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("t", out var token))
        {
            this.resetPasswordModel.ResetToken = token;
        }
    }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.ResetPassword(resetPasswordModel);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    } }